{
  "info": {
    "name": "Firma Digital Backend - API Tests",
    "description": "Colección completa para probar todas las funcionalidades del backend generador de firmas digitales",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "Firmas",
      "description": "Endpoints para gestión de firmas digitales",
      "item": [
        {
          "name": "1. Crear Firma - Datos Válidos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Juan Carlos\",\n  \"apellido\": \"Pérez González\",\n  \"cargo\": \"Gerente de Ventas\",\n  \"departamento\": \"Ventas y Marketing\",\n  \"telefono\": \"+57 1 234-5678\",\n  \"celular\": \"+57 300 123-4567\",\n  \"email\": \"juan.perez@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Crear una firma con todos los campos válidos"
          },
          "response": []
        },
        {
          "name": "2. Crear Firma - Solo Campos Requeridos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"María\",\n  \"apellido\": \"López\",\n  \"cargo\": \"Directora de Nutrición\",\n  \"departamento\": \"Investigación y Desarrollo\",\n  \"email\": \"maria.lopez@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Crear firma solo con campos obligatorios"
          },
          "response": []
        },
        {
          "name": "3. Crear Firma - Error Campos Faltantes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Ana\",\n  \"apellido\": \"García\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Error 400 - Faltan campos requeridos (cargo, departamento, email)"
          },
          "response": []
        },
        {
          "name": "4. Crear Firma - Email Inválido",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Carlos\",\n  \"apellido\": \"Rodríguez\",\n  \"cargo\": \"Analista\",\n  \"departamento\": \"IT\",\n  \"email\": \"email-invalido\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar validación de email inválido"
          },
          "response": []
        },
        {
          "name": "5. Crear Firma - Campos Máximos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Maximiliano Alexander\",\n  \"apellido\": \"Fernández Rodríguez de la Torre y Castillo\",\n  \"cargo\": \"Director Ejecutivo de Desarrollo de Negocios Internacionales y Estrategias Corporativas\",\n  \"departamento\": \"Dirección Ejecutiva de Desarrollo de Negocios Internacionales y Relaciones Corporativas\",\n  \"telefono\": \"+57 1 234-5678 ext. 1000\",\n  \"celular\": \"+57 300 123-4567\",\n  \"email\": \"maximiliano.fernandez@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar campos con longitud máxima"
          },
          "response": []
        },
        {
          "name": "6. Crear Firma - Caracteres Especiales",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"José María\",\n  \"apellido\": \"Niño-Sánchez\",\n  \"cargo\": \"Especialista en Nutrición Clínica\",\n  \"departamento\": \"I+D+i\",\n  \"telefono\": \"(+57) 1 234-5678\",\n  \"celular\": \"(+57) 300-123-4567\",\n  \"email\": \"jose.nino@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar caracteres especiales y acentos"
          },
          "response": []
        },
        {
          "name": "7. Obtener Todas las Firmas",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Obtener listado de todas las firmas creadas"
          },
          "response": []
        },
        {
          "name": "8. Generar HTML - Datos Válidos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Elena\",\n  \"apellido\": \"Martínez\",\n  \"cargo\": \"Coordinadora de Marketing\",\n  \"departamento\": \"Marketing Digital\",\n  \"telefono\": \"+57 1 555-0123\",\n  \"celular\": \"+57 315 555-0123\",\n  \"email\": \"elena.martinez@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas/render-html",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas", "render-html"]
            },
            "description": "Generar HTML de la firma para vista previa"
          },
          "response": []
        },
        {
          "name": "9. Generar HTML - Sin Teléfonos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Roberto\",\n  \"apellido\": \"Silva\",\n  \"cargo\": \"Investigador Senior\",\n  \"departamento\": \"Laboratorio de Investigación\",\n  \"email\": \"roberto.silva@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas/render-html",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas", "render-html"]
            },
            "description": "Generar HTML sin números de teléfono"
          },
          "response": []
        },
        {
          "name": "10. Generar HTML - Error Campos Faltantes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Test\",\n  \"apellido\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas/render-html",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas", "render-html"]
            },
            "description": "Error 400 - Campos requeridos faltantes para HTML"
          },
          "response": []
        },
        {
          "name": "11. Generar Imagen - Datos Completos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Laura\",\n  \"apellido\": \"Hernández\",\n  \"cargo\": \"Jefa de Producto\",\n  \"departamento\": \"Desarrollo de Productos\",\n  \"telefono\": \"+57 1 234-5678\",\n  \"celular\": \"+57 320 123-4567\",\n  \"email\": \"laura.hernandez@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas/generate-image",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas", "generate-image"]
            },
            "description": "Generar imagen PNG de la firma (respuesta en formato blob)"
          },
          "response": []
        },
        {
          "name": "12. Generar Imagen - Solo Campos Requeridos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Miguel\",\n  \"apellido\": \"Torres\",\n  \"cargo\": \"Contador\",\n  \"departamento\": \"Finanzas\",\n  \"email\": \"miguel.torres@innovatenutrition.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas/generate-image",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas", "generate-image"]
            },
            "description": "Generar imagen solo con campos obligatorios"
          },
          "response": []
        },
        {
          "name": "13. Generar Imagen - Error Campos Faltantes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Test\",\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas/generate-image",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas", "generate-image"]
            },
            "description": "Error 400 - Campos requeridos faltantes para imagen"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tests de Estrés y Límites",
      "description": "Pruebas de casos límite y estrés",
      "item": [
        {
          "name": "14. Carga de Datos - JSON Malformado",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Test\",\n  \"apellido\": \"User\",\n  \"cargo\": \"Test\",\n  \"departamento\": \"Test\",\n  \"email\": \"test@example.com\"\n  // JSON malformado\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar JSON malformado"
          },
          "response": []
        },
        {
          "name": "15. Carga de Datos - Campos Vacíos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"\",\n  \"apellido\": \"\",\n  \"cargo\": \"\",\n  \"departamento\": \"\",\n  \"telefono\": \"\",\n  \"celular\": \"\",\n  \"email\": \"\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar campos vacíos"
          },
          "response": []
        },
        {
          "name": "16. Carga de Datos - Campos con Espacios",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"   \",\n  \"apellido\": \"   \",\n  \"cargo\": \"   \",\n  \"departamento\": \"   \",\n  \"email\": \"   \"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar campos solo con espacios"
          },
          "response": []
        },
        {
          "name": "17. Inyección SQL - Intento",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"'; DROP TABLE firmas; --\",\n  \"apellido\": \"Test\",\n  \"cargo\": \"Test\",\n  \"departamento\": \"Test\",\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar protección contra inyección SQL"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tests de Endpoints Inexistentes",
      "description": "Pruebas de rutas no definidas",
      "item": [
        {
          "name": "18. Endpoint No Existente - 404",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/firmas/nonexistent",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas", "nonexistent"]
            },
            "description": "Probar endpoint inexistente"
          },
          "response": []
        },
        {
          "name": "19. Método No Permitido - 405",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/firmas",
              "host": ["{{base_url}}"],
              "path": ["api", "firmas"]
            },
            "description": "Probar método no permitido"
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "description": "URL base del servidor backend"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script global pre-request",
          "console.log('Ejecutando request a:', pm.request.url);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Tests globales",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response should not have errors', function () {",
          "    pm.expect(pm.response.code).to.not.be.oneOf([500, 502, 503, 504]);",
          "});"
        ]
      }
    }
  ]
}